═══════════════════════════════════════════════════════════════════════════
  РЕШЕНИЕ ОШИБОК DOCKER COMPOSE
═══════════════════════════════════════════════════════════════════════════

ОШИБКА 1: 'ContainerConfig'
ПРИЧИНА: Версия docker-compose (1.29.2) несовместима с новым Docker API

ОШИБКА 2: "address already in use" на порту 3000/8000/80
ПРИЧИНА: Порт уже занят другим процессом


═══════════════════════════════════════════════════════════════════════════
  РЕШЕНИЕ 1: ЗАПУСК БЕЗ DOCKER (РЕКОМЕНДУЕТСЯ) ✅
═══════════════════════════════════════════════════════════════════════════

Используйте простой скрипт запуска:

cd /home/"user"/Downloads/people-search-platform22
./simple-start.sh

Этот скрипт:
• Остановит существующие процессы
• Установит зависимости Python
• Запустит backend на порту 8001
• Запустит frontend на порту 3000
• Покажет все точки доступа

После запуска откройте: http://localhost:3000


═══════════════════════════════════════════════════════════════════════════
  РЕШЕНИЕ 2: ОЧИСТИТЬ ПОРТЫ И ЗАПУСТИТЬ DOCKER ✅
═══════════════════════════════════════════════════════════════════════════

Используйте скрипт автоматической очистки:

cd /home/"user"/Downloads/people-search-platform22
./clean-and-start.sh

Этот скрипт:
• Остановит все Docker контейнеры
• Освободит порты 3000, 8000, 80
• Запустит docker-compose up --build

ИЛИ вручную:

# Освободите порты
sudo fuser -k 3000/tcp
sudo fuser -k 8000/tcp
sudo fuser -k 80/tcp
pkill -f react-scripts
pkill -f uvicorn

# Остановите контейнеры
docker-compose down

# Запустите снова
docker-compose up --build


═══════════════════════════════════════════════════════════════════════════
  РЕШЕНИЕ 3: ОБНОВИТЬ DOCKER COMPOSE
═══════════════════════════════════════════════════════════════════════════

Если видите ошибку 'ContainerConfig':

# Удалите старую версию
sudo apt-get remove docker-compose

# Установите новую версию через Docker CLI plugin
sudo apt-get update
sudo apt-get install docker-compose-plugin

# Проверьте версию
docker compose version

# Теперь используйте "docker compose" (БЕЗ дефиса):
docker compose up --build


═══════════════════════════════════════════════════════════════════════════
  РЕШЕНИЕ 4: РУЧНОЙ ЗАПУСК (2 ТЕРМИНАЛА)
═══════════════════════════════════════════════════════════════════════════

ТЕРМИНАЛ 1 - BACKEND:

cd /home/sigmar/Downloads/people-search-platform22/backend
export DATABASE_URL="sqlite:///./people_search.db"
pip3 install --user -r requirements.txt
python3 -m uvicorn app.main:app --host 0.0.0.0 --port 8001 --reload


ТЕРМИНАЛ 2 - FRONTEND:

cd /home/sigmar/Downloads/people-search-platform22/frontend
npm install
npm start


ДОСТУП:
Frontend: http://localhost:3000
Backend:  http://localhost:8001
API Docs: http://localhost:8001/docs


═══════════════════════════════════════════════════════════════════════════
  СОЗДАНИЕ ТЕСТОВЫХ ПОЛЬЗОВАТЕЛЕЙ
═══════════════════════════════════════════════════════════════════════════

После запуска приложения создайте 10 тестовых пользователей:

cd /home/sigmar/Downloads/people-search-platform22/backend
export DATABASE_URL="sqlite:///./people_search.db"
python3 create_10_test_users.py

Будут созданы 10 пользователей с полными профилями.
Пароль для всех: password123


═══════════════════════════════════════════════════════════════════════════
  ОСТАНОВКА ПРИЛОЖЕНИЯ
═══════════════════════════════════════════════════════════════════════════

pkill -f uvicorn
pkill -f react-scripts


═══════════════════════════════════════════════════════════════════════════
  ПРОВЕРКА РАБОТЫ
═══════════════════════════════════════════════════════════════════════════

После запуска проверьте:

1. Backend работает:
   curl http://localhost:8001/docs

2. Frontend работает:
   curl http://localhost:3000

3. Процессы запущены:
   ps aux | grep uvicorn
   ps aux | grep react-scripts


═══════════════════════════════════════════════════════════════════════════
  ИТОГ
═══════════════════════════════════════════════════════════════════════════

✅ ЛУЧШИЙ СПОСОБ: ./simple-start.sh
   (запускает всё автоматически без Docker)

✅ ИЛИ: Обновите docker-compose и используйте "docker compose"
   (с пробелом, не с дефисом)

✅ ИЛИ: Ручной запуск в 2 терминалах

Все способы работают!

