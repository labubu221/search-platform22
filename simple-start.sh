#!/bin/bash

echo "üöÄ –ü—Ä–æ—Å—Ç–æ–π –∑–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–±–µ–∑ Docker Compose)"
echo "=================================================="
echo ""

# Kill any existing processes
echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤..."
pkill -f "uvicorn" 2>/dev/null
pkill -f "node.*react-scripts" 2>/dev/null
pkill -f "python.*main.py" 2>/dev/null
sudo fuser -k 8001/tcp 2>/dev/null
sudo fuser -k 3000/tcp 2>/dev/null
sudo fuser -k 80/tcp 2>/dev/null
sleep 2
echo "‚úÖ –ü—Ä–æ—Ü–µ—Å—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
echo ""

# Navigate to project directory
cd "$(dirname "$0")"
PROJECT_DIR=$(pwd)

# Check Python dependencies
echo "üì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
cd "$PROJECT_DIR/backend"

# Install pip if needed
if ! command -v pip3 &> /dev/null; then
    echo "‚ö†Ô∏è  –£—Å—Ç–∞–Ω–æ–≤–∫–∞ pip3..."
    sudo apt-get update
    sudo apt-get install -y python3-pip
fi

# Install Python packages
echo "‚ö†Ô∏è  –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python –ø–∞–∫–µ—Ç–æ–≤..."
pip3 install --user fastapi uvicorn pydantic sqlalchemy alembic python-jose passlib bcrypt python-multipart scikit-learn pandas numpy python-dotenv pillow email-validator psycopg2-binary redis

echo "‚úÖ Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –≥–æ—Ç–æ–≤—ã"
echo ""

# Set up database
echo "üíæ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
export DATABASE_URL="sqlite:///./people_search.db"
export PATH="$HOME/.local/bin:$PATH"

# Create database if it doesn't exist
if [ ! -f "people_search.db" ]; then
    echo "–°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
    python3 -c "
from app.database import engine, Base
from app.models import User, Profile, Interest, Skill, Match, Message
Base.metadata.create_all(bind=engine)
print('‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–æ–∑–¥–∞–Ω–∞')
" 2>/dev/null || echo "‚ö†Ô∏è  –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –º–æ–∂–µ—Ç —É–∂–µ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞—Ç—å"
fi
echo ""

# Start backend
echo "üöÄ –ó–∞–ø—É—Å–∫ backend –Ω–∞ –ø–æ—Ä—Ç—É 8001..."
cd "$PROJECT_DIR/backend"
export DATABASE_URL="sqlite:///./people_search.db"
export PATH="$HOME/.local/bin:$PATH"
nohup python3 -m uvicorn app.main:app --host 0.0.0.0 --port 8001 --reload > "$PROJECT_DIR/backend.log" 2>&1 &
BACKEND_PID=$!
echo "‚úÖ Backend –∑–∞–ø—É—â–µ–Ω (PID: $BACKEND_PID)"
echo "   –õ–æ–≥–∏: $PROJECT_DIR/backend.log"
sleep 3
echo ""

# Check if backend is running
if curl -s http://localhost:8001/docs > /dev/null 2>&1; then
    echo "‚úÖ Backend –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ http://localhost:8001"
else
    echo "‚ö†Ô∏è  Backend –≤—Å—ë –µ—â—ë –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è..."
fi
echo ""

# Check Node.js
if ! command -v node &> /dev/null; then
    echo "‚ö†Ô∏è  Node.js –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    echo "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —á–µ—Ä–µ–∑ nvm..."
    curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash
    export NVM_DIR="$HOME/.nvm"
    [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
    nvm install 18
    nvm use 18
fi

# Start frontend
echo "üé® –ó–∞–ø—É—Å–∫ frontend –Ω–∞ –ø–æ—Ä—Ç—É 3000..."
cd "$PROJECT_DIR/frontend"

# Check if node_modules exists
if [ ! -d "node_modules" ]; then
    echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ frontend –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π (—ç—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç)..."
    npm install
fi

# Start React app
nohup npm start > "$PROJECT_DIR/frontend.log" 2>&1 &
FRONTEND_PID=$!
echo "‚úÖ Frontend –∑–∞–ø—É—â–µ–Ω (PID: $FRONTEND_PID)"
echo "   –õ–æ–≥–∏: $PROJECT_DIR/frontend.log"
echo ""

# Wait for services to start
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–µ—Ä–≤–∏—Å–æ–≤..."
sleep 15
echo ""

# Show status
echo "=================================================="
echo "‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ!"
echo "=================================================="
echo ""
echo "üìç –¢–æ—á–∫–∏ –¥–æ—Å—Ç—É–ø–∞:"
echo "   Frontend: http://localhost:3000"
echo "   Backend:  http://localhost:8001"
echo "   API Docs: http://localhost:8001/docs"
echo ""
echo "üîç ID –ø—Ä–æ—Ü–µ—Å—Å–æ–≤:"
echo "   Backend:  $BACKEND_PID"
echo "   Frontend: $FRONTEND_PID"
echo ""
echo "üìù –õ–æ–≥–∏:"
echo "   Backend:  tail -f $PROJECT_DIR/backend.log"
echo "   Frontend: tail -f $PROJECT_DIR/frontend.log"
echo ""
echo "üß™ –¢–µ—Å—Ç–æ–≤—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã (–ø–∞—Ä–æ–ª—å: password123):"
echo "   john.doe@example.com (–°–∞–Ω-–§—Ä–∞–Ω—Ü–∏—Å–∫–æ)"
echo "   jane.smith@example.com (–ù—å—é-–ô–æ—Ä–∫)"
echo "   mike.wilson@example.com (–õ–æ—Å-–ê–Ω–¥–∂–µ–ª–µ—Å)"
echo "   sarah.johnson@example.com (–ß–∏–∫–∞–≥–æ)"
echo "   alex.brown@example.com (–°–∏—ç—Ç–ª)"
echo ""
echo "üìå –°–æ–∑–¥–∞—Ç—å 10 —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:"
echo "   cd backend"
echo "   export DATABASE_URL='sqlite:///./people_search.db'"
echo "   python3 create_10_test_users.py"
echo ""
echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å: pkill -f uvicorn && pkill -f react-scripts"
echo "=================================================="

