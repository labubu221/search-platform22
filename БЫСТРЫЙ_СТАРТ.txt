═══════════════════════════════════════════════════════════════════════════
  🚀 БЫСТРЫЙ СТАРТ - ВЫБЕРИТЕ ОДИН СПОСОБ
═══════════════════════════════════════════════════════════════════════════


┌─────────────────────────────────────────────────────────────────────┐
│ СПОСОБ 1: БЕЗ DOCKER (САМЫЙ ПРОСТОЙ) ⭐ РЕКОМЕНДУЕТСЯ             │
└─────────────────────────────────────────────────────────────────────┘

cd /home/sigmar/Downloads/people-search-platform22
./simple-start.sh

✅ Запустит всё автоматически
✅ Не нужен Docker
✅ Работает сразу

Откройте: http://localhost:3000


┌─────────────────────────────────────────────────────────────────────┐
│ СПОСОБ 2: С DOCKER ⭐ АВТОМАТИЧЕСКИ СОЗДАЕТ ПОЛЬЗОВАТЕЛЕЙ          │
└─────────────────────────────────────────────────────────────────────┘

cd /home/sigmar/Downloads/people-search-platform22
./clean-and-start.sh

✅ Очистит порты автоматически
✅ Запустит Docker Compose
✅ Автоматически создаст 10 тестовых пользователей
✅ Всё в контейнерах

Откройте: http://localhost


┌─────────────────────────────────────────────────────────────────────┐
│ ЕСЛИ ОШИБКА "address already in use"                                │
└─────────────────────────────────────────────────────────────────────┘

# Освободите порты:
sudo fuser -k 3000/tcp
sudo fuser -k 8000/tcp
sudo fuser -k 80/tcp

# Затем запустите снова:
./clean-and-start.sh


┌─────────────────────────────────────────────────────────────────────┐
│ СОЗДАТЬ 10 ТЕСТОВЫХ ПОЛЬЗОВАТЕЛЕЙ                                   │
└─────────────────────────────────────────────────────────────────────┘

⚠️  С DOCKER: Пользователи создаются АВТОМАТИЧЕСКИ! Ничего делать не надо!

БЕЗ DOCKER: Создайте вручную:

cd backend
export DATABASE_URL="sqlite:///./people_search.db"
python3 create_10_test_users.py

Пароль для всех: password123


┌─────────────────────────────────────────────────────────────────────┐
│ ТЕСТОВЫЕ АККАУНТЫ                                                   │
└─────────────────────────────────────────────────────────────────────┘

Пароль для всех: password123

1.  john.doe@example.com        - Сан-Франциско
2.  jane.smith@example.com      - Нью-Йорк
3.  mike.wilson@example.com     - Лос-Анджелес
4.  sarah.johnson@example.com   - Чикаго
5.  alex.brown@example.com      - Сиэтл
6.  emma.davis@example.com      - Бостон
7.  david.martinez@example.com  - Остин
8.  olivia.taylor@example.com   - Майами
9.  james.anderson@example.com  - Денвер
10. sophia.lee@example.com      - Портленд


┌─────────────────────────────────────────────────────────────────────┐
│ ОСТАНОВИТЬ ПРИЛОЖЕНИЕ                                               │
└─────────────────────────────────────────────────────────────────────┘

Без Docker:
pkill -f uvicorn && pkill -f react-scripts

С Docker:
docker-compose down
ИЛИ: Ctrl+C в терминале


┌─────────────────────────────────────────────────────────────────────┐
│ ПРОВЕРКА РАБОТЫ                                                     │
└─────────────────────────────────────────────────────────────────────┘

# Backend работает?
curl http://localhost:8001/docs

# Frontend работает?
curl http://localhost:3000

# Процессы запущены?
ps aux | grep uvicorn
ps aux | grep react-scripts


┌─────────────────────────────────────────────────────────────────────┐
│ ЧТО ТЕСТИРОВАТЬ                                                     │
└─────────────────────────────────────────────────────────────────────┘

1. AI-ПОИСК:
   - Перейдите в "AI Search"
   - Введите: "Find developers in San Francisco"
   - Нажмите "Search"

2. ФИЛЬТР ПО ГОРОДУ:
   - Discover → Filters
   - City: "Boston" (только это поле)
   - Search

3. ЛАЙК:
   - Откройте профиль любого пользователя
   - Нажмите "Like"
   - Никаких ошибок!


┌─────────────────────────────────────────────────────────────────────┐
│ ФАЙЛЫ ДОКУМЕНТАЦИИ                                                  │
└─────────────────────────────────────────────────────────────────────┘

РУКОВОДСТВО.txt          - Полное руководство (647 строк)
ИТОГО.txt                - Краткая сводка
ИСПРАВЛЕНИЕ_ОШИБКИ.txt   - Решение ошибок
БЫСТРЫЙ_СТАРТ.txt        - Этот файл


┌─────────────────────────────────────────────────────────────────────┐
│ ПОЛЕЗНЫЕ КОМАНДЫ                                                    │
└─────────────────────────────────────────────────────────────────────┘

# Посмотреть логи backend:
tail -f backend.log

# Посмотреть логи frontend:
tail -f frontend.log

# Посмотреть логи Docker:
docker-compose logs -f

# Перезапустить Docker:
docker-compose restart

# Пересобрать Docker:
docker-compose up --build


═══════════════════════════════════════════════════════════════════════════
                         ✅ ВСЁ ГОТОВО!
═══════════════════════════════════════════════════════════════════════════

ВЫБЕРИТЕ СПОСОБ ЗАПУСКА:

⭐ БЕЗ DOCKER:    ./simple-start.sh
🐳 С DOCKER:      ./clean-and-start.sh

Затем откройте браузер:
• http://localhost:3000  (без Docker)
• http://localhost       (с Docker)

Войдите с любым тестовым аккаунтом!

═══════════════════════════════════════════════════════════════════════════

